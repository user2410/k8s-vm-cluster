version: '3'

tasks:
  all:
    desc: "Distribute all config files to VMs"
    cmds:
      # Distribute hosts file
      - task: dist:hosts-file
      # Script files
      - task: dist:master
        vars: { FILE_PATH: '{{.SCRIPT_PATH}}/{bootstrap.sh,k8s-master.sh,etcd.sh,cni_coredns.sh}', DEST_PATH: '{{.SCRIPT_DST_DIR}}' }
      - task: dist:workers
        vars: { FILE_PATH: '{{.SCRIPT_PATH}}/{bootstrap.sh,k8s-worker.sh}', DEST_PATH: '{{.SCRIPT_DST_DIR}}' }
      # Master node
      - task: dist:master:certs
      - task: dist:master
        vars: { FILE_PATH: '{{.UNIT_PATH}}/{kube-apiserver.service,kube-controller-manager.service,kube-scheduler.service,etcd.service}', DEST_PATH: '{{.UNIT_DST_DIR}}' }
      - task: dist:master
        vars: { FILE_PATH: '{{.KUBECONFIG_PATH}}/{kube-controller-manager.kubeconfig,kube-scheduler.kubeconfig,admin.kubeconfig}', DEST_PATH: '{{.KUBECONFIG_DST_DIR}}' }
      - task: dist:master
        vars: { FILE_PATH: '{{.CONFIG_PATH}}/{encryption-config.yaml,kube-scheduler.yaml,kube-apiserver-to-kubelet.yaml,csrs-for-bootstrapping.yaml,auto-approve-renewals-for-nodes.yaml,auto-approve-csrs-for-group.yaml,auto-approve-kubelet-serving-csrs.yaml,bootstrap-token-*.yaml}', DEST_PATH: '{{.CONFIG_DST_DIR}}' }
      # Worker nodes
      - task: dist:workers:certs
      - task: dist:workers
        vars: { FILE_PATH: '{{.UNIT_PATH}}/{containerd.service,kubelet.worker*.service,kube-proxy.service}', DEST_PATH: '{{.UNIT_DST_DIR}}' }
      - task: dist:workers
        vars: { FILE_PATH: '{{.KUBECONFIG_PATH}}/{worker*.kubeconfig,kube-proxy.kubeconfig,tls-bootstrap.kubeconfig}', DEST_PATH: '{{.KUBECONFIG_DST_DIR}}' }
      - task: dist:workers
        vars: { FILE_PATH: '{{.CONFIG_PATH}}/{kubelet-config.yaml,containerd-config.toml,kube-proxy-config.yaml}', DEST_PATH: '{{.CONFIG_DST_DIR}}' }

  dist:hosts-file:
    desc: "Distribute /etc/hosts file to all VMs"
    vars:
      MASTER_IP:
        sh: |
          {{.MASTER_IP_CMD}}
      TMP_FILE: '/tmp/hosts_addition'
    cmds:
      - awk '{print $1, $2, $3}' machines.txt > /tmp/hosts_addition
      - task: dist:master
        vars: { FILE_PATH: '{{.TMP_FILE}}', DEST_PATH: '{{.HOME_DST_DIR}}' }
      - task: dist:workers
        vars: { FILE_PATH: '{{.TMP_FILE}}', DEST_PATH: '{{.HOME_DST_DIR}}' }
      - rm -f {{.TMP_FILE}}
      
  dist:master:
    desc: "Distribute config files to the master VM"
    vars:
      # FILE_PATH: {{.FILE_PATH}}
      # DEST_PATH: {{.DEST_PATH}}
      MASTER_IP:
        sh: |
          {{.MASTER_IP_CMD}}
    cmds:
      - |
        scp {{.SSH_PARAMS}} -i .vagrant/machines/master/virtualbox/private_key \
          {{.FILE_PATH}} \
          vagrant@{{.MASTER_IP}}:{{.DEST_PATH}}

  dist:master:certs:
    desc: "Distribute certificates to the master VM"
    cmds:
      - task: dist:master
        vars: { FILE_PATH: '{{.CERT_PATH}}/{ca.crt,ca.key,kube-api-server.key,kube-api-server.crt,service-accounts.key,service-accounts.crt,etcd.crt,etcd.key}', DEST_PATH: '{{.CERT_DST_DIR}}' }
  
  dist:workers:
    desc: "Distribute config files to all worker VMs"
    # vars:
      # FILE_PATH: {{.FILE_PATH}}
      # DEST_PATH: {{.DEST_PATH}}
    cmds:
      - |
        for i in $(seq 1 {{.WORKER_COUNT}}); do
          WORKER_IP=$(awk -v idx=$i '$2 == "worker"idx {print $1}' ./machines.txt)
          scp {{.SSH_PARAMS}} -i .vagrant/machines/worker$i/virtualbox/private_key \
            {{.FILE_PATH}} \
            vagrant@$WORKER_IP:{{.DEST_PATH}}
        done

  dist:workers:certs:
    desc: "Distribute certificates to all worker VMs"
    cmds:
      - task: dist:workers
        vars: { FILE_PATH: '{{.CERT_PATH}}/{ca.crt,worker*.crt,worker*.key,kube-proxy.crt,kube-proxy.key}', DEST_PATH: '{{.CERT_DST_DIR}}' }
