version: '3'

tasks:
  config:
    desc: "Configure networking"
    sources:
      - ./machines.txt
    status:
      - '! test -f ./machines.txt'
    cmds:
      - task: config:kube-proxy
      - task: config:kube-apiserver
      - task: config:kube-controller-manager
      - task: config:kubelet

  config:kube-proxy:
    desc: "Configure kube-proxy"
    vars:
      POD_CIDR:
        sh: |
          {{.POD_CIDR_CMD}}
    cmds:
      - sed "s#{POD_CIDR}#{{.POD_CIDR}}#g" {{.CONFIG_PATH}}/kube-proxy-config.template.yaml > {{.CONFIG_PATH}}/kube-proxy-config.yaml

  config:kube-apiserver:
    desc: "Configure kube-apiserver"
    vars:
      MASTER_IP:
        sh: |
          {{.MASTER_IP_CMD}}
      MASTER_FQDN:
        sh: |
          {{.MASTER_FQDN_CMD}}
      SERVICE_CIDR:
        sh: |
          {{.SERVICE_CIDR_CMD}}
    cmds:
      - |        
        sed "s#{MASTER_IP}#{{.MASTER_IP}}#g; s#{MASTER_FQDN}#{{.MASTER_FQDN}}#g; s#{SERVICE_CIDR}#{{.SERVICE_CIDR}}#g" \
          {{.UNIT_PATH}}/kube-apiserver.template.service > \
          {{.UNIT_PATH}}/kube-apiserver.service

  config:kube-controller-manager:
    desc: "Configure kube-controller-manager"
    vars:
      POD_CIDR:
        sh: |
          {{.POD_CIDR_CMD}}
      SERVICE_CIDR:
        sh: |
          {{.SERVICE_CIDR_CMD}}
    cmds:
      - |        
        sed "s#{POD_CIDR}#{{.POD_CIDR}}#g; s#{SERVICE_CIDR}#{{.SERVICE_CIDR}}#g" \
          "{{.UNIT_PATH}}/kube-controller-manager.template.service" > \
          "{{.UNIT_PATH}}/kube-controller-manager.service"

  config:kubelet:
    desc: "Configure kubelet"
    vars:
      SERVICE_CIDR:
        sh: |
          {{.SERVICE_CIDR_CMD}}
      CLUSTER_DNS: 
        sh: |
          echo {{.SERVICE_CIDR}} | awk 'BEGIN {FS="."} ; { printf("%s.%s.%s.10", $1, $2, $3) }'
    cmds:
      - |
        for i in $(seq 1 {{.WORKER_COUNT}}); do
          WORKER_IP=$(awk -v idx=$i '$2 == "worker"idx {print $1}' ./machines.txt)
          sed "s#{PRIMARY_IP}#${WORKER_IP}#g" {{.UNIT_PATH}}/kubelet.template.service > {{.UNIT_PATH}}/kubelet.worker$i.service
          sed "s#{CLUSTER_DNS}#{{.CLUSTER_DNS}}#g" {{.CONFIG_PATH}}/kubelet-config.template.yaml > {{.CONFIG_PATH}}/kubelet-config.yaml
        done
  
  config:cni:
    desc: "Install CNI plugin and CoreDNS"
    vars:
      MASTER_IP:
        sh: |
          {{.MASTER_IP_CMD}}
      POD_CIDR:
        sh: |
          {{.POD_CIDR_CMD}}
      SERVICE_CIDR:
        sh: |
          {{.SERVICE_CIDR_CMD}}
    cmds:
      - |
        ssh {{.SSH_PARAMS}} -i .vagrant/machines/master/virtualbox/private_key \
          vagrant@{{.MASTER_IP}} "sudo chmod +x {{.SCRIPT_DST_DIR}}/networking.sh && sudo {{.SCRIPT_DST_DIR}}/networking.sh {{.CNI_PLUGIN}} {{.POD_CIDR}} {{.SERVICE_CIDR}}"

  clean:
    desc: "Clean up networking configuration"
    cmds:
      - rm -f ./configs/kube-proxy-config.yaml
      - rm -f {{.UNIT_PATH}}/kube-apiserver.service
      - rm -f {{.UNIT_PATH}}/kube-controller-manager.service
      - rm -f {{.UNIT_PATH}}/kubelet.worker*.service
