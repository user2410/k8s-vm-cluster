version: '3'

includes:
  certificates: tasks/certificates.taskfile.yml
  encryption-key: tasks/encryption-key.taskfile.yml
  vms: tasks/vms.taskfile.yml

tasks:
  verify:control-plane:
    desc: "Verify that Kubernetes control plane is up and running."
    cmds:
      - |
        echo "Extracting variable..."
        MASTER_IP=$(grep 'master' ./scripts/local/hosts | awk '{print $1}')
        echo "Extracted MASTER_IP: $MASTER_IP"

        curl --cacert ./certs/ca.crt \
          https://$MASTER_IP:6443/version

  config:pod_cidr:
    desc: "Configure Pod CIDR"
    status:
      - |
        if command -v yq >/dev/null 2>&1; then
          exit 1
        fi
        exit 0
    cmds:
      - |
        POD_CIDR=$(yq '.master.pod_network_cidr' config.yaml)
        echo "Extracted POD_CIDR: $POD_CIDR"
        
        sed "s#{POD_CIDR}#${POD_CIDR}#g" ./configs/kube-proxy-config.template.yaml > ./configs/kube-proxy-config.yaml

  config:kube-apiserver:
    desc: "Configure kube-apiserver"
    status:
      - |
        if command -v yq >/dev/null 2>&1; then
          exit 1
        fi
        exit 0
    cmds:
      - |
        MASTER_IP=$(grep 'master' ./scripts/local/hosts | awk '{print $1}')
        echo "Extracted MASTER_IP: $MASTER_IP"

        sed "s#{MASTER_IP}#${MASTER_IP}#g" ./units/kube-apiserver.template.service > ./units/kube-apiserver.service

  build:
    desc: "Build / Turn on VMs for K8s cluster"
    cmds:
      # - task: vms:start:all
      # - task: config:pod_cidr
      # - task: config:kube-apiserver
      # - task: certificates:gen:all
      # - |
      #   echo "Running installation scripts on master node..."

      #   echo "Extracting variable..."
      #   MASTER_IP=$(grep 'master' ./scripts/local/hosts | awk '{print $1}')
      #   echo "Extracted MASTER_IP: $MASTER_IP"
        
      #   ssh -i .vagrant/machines/master/virtualbox/private_key \
      #     vagrant@$MASTER_IP "sudo chmod +x /vagrant/scripts/etcd.sh && sudo /vagrant/scripts/etcd.sh"

      #   sleep 1

      #   ssh -i .vagrant/machines/master/virtualbox/private_key \
      #     vagrant@$MASTER_IP "sudo chmod +x /vagrant/scripts/k8s-master.sh && sudo /vagrant/scripts/k8s-master.sh"
      - for: ['worker1', 'worker2']
        cmd: |
          echo "Running installation scripts on worker node {{.ITEM}}..."

          echo "Extracting variable..."
          WORKER_IP=$(grep '{{.ITEM}}' ./scripts/local/hosts | awk '{print $1}')
          echo "Extracted WORKER_IP: $WORKER_IP"

          ssh -i .vagrant/machines/{{.ITEM}}/virtualbox/private_key \
            vagrant@$WORKER_IP "sudo chmod +x /vagrant/scripts/k8s-worker.sh && sudo /vagrant/scripts/k8s-worker.sh"
  
  destroy:
    cmds:
      - task: vms:destroy:all
      - task: certificates:clean
      - rm -f ./scripts/local/{hosts,*.sh}
